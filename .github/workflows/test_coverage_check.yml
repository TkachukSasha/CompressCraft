name: Test Coverage Check

on:
    push:
        branches: [ "main", "dev" ]
    pull_request:
        branches: [ "main", "dev" ]

jobs:
    test-coverage:
        runs-on: ubuntu-latest

        env:
            Scripts: ./.github/workflows/scripts

        steps:
            - name: Check out code
              uses: actions/checkout@v3

            - name: Setup .Net
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: 7.0.x

            - name: Restore dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore

            - name: DomainTests
              run: dotnet test ./tests/Core/CompressCraft.Domain.UnitTests/CompressCraft.Domain.UnitTests.csproj --no-build --verbosity normal --collect:"XPlat Code Coverage"

            - name: ApplicationTests
              run: dotnet test ./tests/Core/CompressCraft.Application.UnitTests/CompressCraft.Application.UnitTests.csproj --no-build --verbosity normal --collect:"XPlat Code Coverage"

            - name: Install ReportGenerator
              run: dotnet tool install -g dotnet-reportgenerator-globaltool

            - name: Install dotnet-coverage
              run: dotnet tool install -g dotnet-coverage

            - name: Merge Coverage
              run: dotnet-coverage merge *.cobertura.xml --recursive --output merged.cobertura.xml --output-format cobertura

            - name: Build Coverage Report
              run: reportgenerator -reports:"merged.cobertura.xml" -targetdir:"coveragereport" -reporttypes:Html

            - name: Upload build artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: coverage-artifacts
                  path: coveragereport/

            - name: Calculate Code Coverage Percentage with PowerShell
              shell: pwsh
              run: ${{ env.Scripts }}/extract-coverage.ps1
              env:
                  COVERAGE_THRESHOLD: $coverageThreshold 